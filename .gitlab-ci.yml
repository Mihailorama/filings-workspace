# Setup
stages:
  - build
  - publish
  - deploy

cache:
  key: "$CI_BUILD_REF_NAME" # Per branch caching
  paths:
    - node_modules

# Job Templates
.template_docker: &template_docker
  tags:
    - docker

.template_docker_privileged: &template_docker_privileged
  tags:
    - docker
    - docker-privileged

.template_node: &template_node
  <<: *template_docker_privileged
  image: artifacts.int.corefiling.com:5000/nimbus-tools/build-npm-package:0.7.0

.template_kube_deploy: &template_kube_deploy
  <<: *template_docker
  image: artifacts.int.corefiling.com:5000/pdds/kube-deploy:0.8.1

.template_build_npm: &template_build_npm
  <<: *template_docker_privileged
  image: artifacts.int.corefiling.com:5000/nimbus-tools/build-npm-package:0.7.0

# Build stage
## Templates
.template_npm_script: &template_npm_script
  <<: *template_node
  stage: build
  before_script:
    - time yarn install
    - npm config set git-tag-version false
    - npm run set-build-version
  script:
    - time npm run $CI_BUILD_NAME

## Jobs
build:version:
  <<: *template_node
  stage: build
  artifacts:
    expire_in: 1 week
    paths:
      - build.version
  before_script:
    - npm install -g @janslow/ci-build-version@dev
  script:
    - ci-build-version -f package.json > build.version
    - echo `cat build.version`

compile:webpack:
  <<: *template_npm_script
  artifacts:
    expire_in: 1 week
    paths:
      - www

test:tslint: *template_npm_script
test:karma: *template_npm_script


# Publish stage
publish:
  <<: *template_build_npm
  stage: publish
  dependencies:
    - compile:webpack
  variables:
    publish: 'true'
  script:
    - time /app/scripts/build.py


# Deploy stage
deploy:
  stage: deploy
  dependencies:
    - build:version
  #   - publish
  environment:
    name: staging
    url: https://platform.cfl.io
  variables:
    TILLER_NAMESPACE: platform  # Internal namespace we use for apps staging
    HELM_CHART: $CI_PROJECT_NAME
  before_script:
    - export IMAGE_TAG=`cat build.version`
    - echo "IMAGE_TAG=$IMAGE_TAG"
    - /kube/init $KUBE_AUTH_TOKEN $TILLER_NAMESPACE
  script:
    - echo "Deploying $HELM_CHART with image $IMAGE_TAG"
    - cd charts
    - helm dep up $HELM_CHART
    - helm upgrade --install
      --set imageTag=$IMAGE_TAG
      --namespace=$TILLER_NAMESPACE
      $HELM_CHART $HELM_CHART
    - /kube/checkRunning
  only:
    - develop@labs/passfail-validator # Need to watch out for if generating template
